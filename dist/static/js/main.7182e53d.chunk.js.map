{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authAction.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/layout/Footer.js","store/actions/projectActions.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","config/firebaseConfig.js","components/auth/SignUp.js","components/layout/Account.js","components/projects/CreateProject.js","components/projects/EditProject.js","components/auth/ForgotPassword.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","action","className","onClick","to","profile","initials","SignedOutLinks","state","firebase","closeNav","elements","document","getElementById","classList","remove","links","emailVerified","id","src","alt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Footer","deleteProject","projectId","getFirestore","collection","doc","delete","catch","error","ProjectSummary","handleDelete","e","preventDefault","target","this","project","count","area","key","Component","ProjectList","projects","reverse","map","index","Dashboard","len","length","compose","firestore","ordered","notifications","firestoreConnect","orderBy","ownProps","match","params","data","name","city","Comments","authorId","moment","createdAt","toDate","calendar","SignIn","email","password","handleChange","setState","value","handleSubmit","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","user","currentUser","reload","sendEmailVerification","err","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","appId","measurementId","SignUp","firstName","lastName","confirmPassword","errors","input","validate","signUp","isValid","RegExp","test","required","creds","newUser","createUserWithEmailAndPassword","resp","uid","set","Account","where","CreateProject","comments","createProject","history","push","add","authorFirstName","authorLastName","Date","EditProject","console","log","editProject","get","snapshot","docs","forEach","defaultValue","update","resetPassword","emailAddress","sendPasswordResetEmail","App","exact","path","component","ProjectDetails","ForgotPassword","Boolean","window","location","hostname","initState","authReducer","message","title","content","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebaseProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7182e53d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authAction'\r\n\r\nconst SignedInLinks = (props) => {\r\n    \r\n    function action() { \r\n        props.action()\r\n    }\r\n    return (\r\n        <div className=\"row offset-md-4 col-md-8\">\r\n        <ul className=\"navbar-nav col-md-8\">\r\n            <li className=\"nav-item\" onClick={action}><NavLink className=\"nav-link\" to='/'>Home</NavLink></li>   \r\n            <li className=\"nav-item\" onClick={action}><NavLink className=\"nav-link\" to='/create'>Register New Set</NavLink></li>\r\n            <li className=\"nav-item\" onClick={action}><NavLink className=\"nav-link\" to='/account'>My Account</NavLink></li>\r\n            <li className=\"nav-item\" onClick={action}><a className=\"nav-link\" onClick={ props.signOut }>Log Out</a></li>\r\n        </ul>\r\n        <NavLink onClick={action} className=\"offset-md-3 btn btn-floating initials\" to='/account'><b>{ props.profile.initials }</b></NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            var user = firebase.auth().currentUser;\r\n            user.reload();\r\n            if(user.emailVerified){\r\n                dispatch({type: 'LOGIN_SUCCESS'});\r\n            }\r\n            else{\r\n                user.sendEmailVerification()\r\n                dispatch({type: 'VERIFY_EMAIL'});\r\n            }\r\n        }).catch((err) => {\r\n            dispatch({type: 'LOGIN_ERROR', err});\r\n        });\r\n    }\r\n}\r\n\r\nexport const resetPassword = (emailAddress) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        var auth = firebase.auth();\r\n        auth.sendPasswordResetEmail(emailAddress).then(function() {\r\n            dispatch({type: 'RESET_EMAIL_SUCCESS'});\r\n        }).catch(function(err) {\r\n            dispatch({type: 'RESET_EMAIL_ERROR', err});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type: 'SIGNOUT_SUCCESS'})\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email, \r\n            newUser.password\r\n        ).then(resp => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            });\r\n        }).then(() => {\r\n            var user = firebase.auth().currentUser;\r\n            user.sendEmailVerification().then(function() {\r\n                dispatch({type:'VALIDATE_EMAIL'});\r\n              }).catch(function(err) {\r\n                dispatch({type:'VALIDATE_EMAIL_ERROR', err});\r\n              });\r\n         }).catch(function(err) {\r\n            dispatch({type:'CREATE_EMAIL_ERROR', err});\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = (props) => {\r\n\r\n    function action() { \r\n        props.action()\r\n    }\r\n    return (\r\n        <div className=\"offset-md-5\">\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\" onClick={action}><NavLink className=\"nav-link\" to='/signup'>Sign Up</NavLink></li>   \r\n                <li className=\"nav-item\" onClick={action}><NavLink className=\"nav-link\" to='/signin'>Log In</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    \r\n    function closeNav() { \r\n        var elements = document.getElementById('navbarSupportedContent')\r\n        if(elements)\r\n        elements.classList.remove('show') \r\n    }\r\n\r\n    const { auth, profile } = props\r\n    var links = auth.emailVerified ? <SignedInLinks profile={profile} action={closeNav}/> : <SignedOutLinks action={closeNav}/>\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark sticky-top \" >\r\n            <Link className=\"offset-md-1\" to=\"/\">\r\n                <img id=\"togglenavimage\" src=\"nav-logo.png\" alt=\"LOH2020\" ></img>\r\n            </Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse col-md-10\" id=\"navbarSupportedContent\">\r\n                { links }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n    //console.log(state);\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\n\r\nconst Footer = (props) => {\r\n\r\n    return (\r\n        <footer>\r\n            <img className=\"img-fluid footer-banner\" alt=\"footerImg\" src=\"/img/herc_pattern.jpg\"></img>\r\n        </footer>\r\n    )\r\n}\r\n\r\n\r\nexport default Footer","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirestore }) => {\r\n        // async call using firebase\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile\r\n        const authorId = getState().firebase.auth.uid\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project})\r\n        }).catch((error) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', error})\r\n        })\r\n    }\r\n};\r\n\r\nexport const deleteProject = (projectId) => {\r\n    return (dispatch, getState, { getFirestore }) => {\r\n        // async call using firebase\r\n        const firestore = getFirestore();\r\n        //const profile = getState().firebase.profile\r\n        //const authorId = getState().firebase.auth.uid\r\n        firestore.collection('projects').doc(projectId).delete().then(() => {\r\n            dispatch({ type: 'DELETE_PROJECT', projectId})\r\n        }).catch((error) => {\r\n            dispatch({ type: 'DELETE_PROJECT_ERROR', error})\r\n        })\r\n    }\r\n};\r\n\r\nexport const editProject = (project) => {\r\n    return (dispatch, getState, { getFirestore }) => {\r\n        // async call using firebase\r\n        const firestore = getFirestore();\r\n        //const profile = getState().firebase.profile\r\n        //const authorId = getState().firebase.auth.uid\r\n        console.log(project)\r\n        firestore.collection('projects').doc( project.id ).update({\r\n            ...project\r\n        }).then(() => {\r\n            dispatch({ type: 'EDIT_PROJECT', project})\r\n        }).catch((error) => {\r\n            dispatch({ type: 'EDIT_PROJECT_ERROR', error})\r\n        })\r\n    }\r\n};","import React, {Component} from 'react'\r\nimport { deleteProject } from '../../store/actions/projectActions'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass ProjectSummary extends Component {\r\n    handleDelete = (e) => {\r\n        e.preventDefault()\r\n        this.props.deleteProject(e.target.id)\r\n    }\r\n    render(){\r\n        const { project, count, area } = this.props\r\n    return (\r\n        <div className=\"col-sm-6 collection-item\">\r\n        \r\n            { area === \"myAccount\" ? \r\n            <div className=\"card\">\r\n                <Link className=\"card-body\" to={'/project/' + project.id} key={ \"account_\"+project.id }>\r\n                    <p className=\"card-title\">My Set {count}</p> \r\n                    </Link>\r\n                    {/* <a className=\"\" onClick={ this.handleDelete }><span class=\"glyphicon glyphicon-trash\" aria-hidden=\"true\"></span></a> */}\r\n                </div>\r\n\r\n                /* <Link to={'/editProject/' + project.id} key={ \"edit\"+project.id }>\r\n                    <span class=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>\r\n                </Link> */\r\n                \r\n                    \r\n            \r\n            :\r\n                <div className=\"card\">\r\n                    <Link to={'/project/' + project.id} key={ \"dashboard_\"+project.id }>\r\n                        <p className=\"collection-icon-text\">Registered Set {count}/1750</p> \r\n                    </Link>\r\n                </div>}\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nconst mapDispatchtoProps = (dispatch) => {\r\n    return {\r\n        deleteProject: (projectId) => dispatch(deleteProject(projectId))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchtoProps)(ProjectSummary)","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\n\r\nconst ProjectList = ({ projects, area }) => {\r\n    \r\n    return (\r\n        <div className=\"row\" >\r\n            \r\n                    { projects && [...projects].reverse().map ((project, index) => {\r\n                        return (\r\n                            <ProjectSummary project = { project } count = {index+1} area = { area } key={ \"project_\"+index+1 }/>\r\n                        )\r\n                    }) }   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n        const { projects, auth } = this.props\r\n        var len = null\r\n        if (projects){\r\n        len = projects.length\r\n        }\r\n        //console.log(projects)\r\n        //if user isnt loged in\r\n        if(!auth.emailVerified) return <Redirect to='/signIn' />\r\n        \r\n        return(\r\n            <div className=\"dashboard container\">\r\n            <br/>\r\n                <div className=\"row\">\r\n                    <h3 className=\" offset-md-1 title2\">Registered Sets</h3>\r\n                    <h3 className=\"offset-xs-1 col-xs-11 offset-md-6 totalSets\">{len}/1750</h3>\r\n                </div>\r\n                <div className=\"registered-sets\">\r\n                    <ProjectList projects={ projects } area={ \"Dashboard\" }/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n    \r\n    return{\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStatetoProps), \r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc']}//,\r\n        //{ collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project } = props;\r\n    const { id } = props;\r\n    //console.log(project)\r\n    if(project){\r\n        return(\r\n            <div className=\"container project-details\">\r\n                <br/>\r\n                <br/>\r\n                <div className=\"card text-center\">\r\n                    <div className=\"card-header\">\r\n                        Your collection reference is: <b>{ id }</b>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Collection Details</h5>\r\n                        <p className=\"card-text\">Collection Name: { project.name }</p>\r\n                        <p className=\"card-text\">City: { project.city }</p>\r\n                        <p className=\"card-text\">Comments: { project.Comments }</p>\r\n                    </div>\r\n                    <div className=\"card-footer text-muted\">\r\n                        Posted By: { project.authorId }\r\n                        <br/>\r\n                        { moment(project.createdAt.toDate()).calendar() }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <h5>Loading project...</h5>\r\n            </div>    \r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        id: id\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects'}\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authAction'\r\nimport { Redirect, Link } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props\r\n        if(auth.emailVerified) return <Redirect to='/account' />\r\n        return (\r\n            <div className=\"container\">\r\n            <br/>\r\n            <br/>\r\n                <form onSubmit={ this.handleSubmit } className=\"white\">\r\n                    <h3 className=\"text-center\">Log In</h3>\r\n                    \r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input className=\"form-control\" type=\"email\" id=\"email\" onChange={ this.handleChange } />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input className=\"form-control\" type=\"password\" id=\"password\" onChange={ this.handleChange } />\r\n                    </div>\r\n                    <Link className=\"forgotten-password\" to=\"/resetPassword\"><p>Forgoten Password?</p></Link>\r\n                    <div className=\"form-group text-center\">\r\n                        <button className=\"btn register-btn\">Login</button>\r\n                        <div className=\"auth-error text-center\">\r\n                            { authError ? authError===\"Thank you for signing up! An email has be sent to your account, please follow the instructions there.\"? null: <p>{ authError }</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (credentials) => dispatch(signIn(credentials))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyD2jjhw0ZilJAgz63I2Ruik65tsa4dlz2Y\",\r\n    authDomain: \"projectsdashboard-7a76d.firebaseapp.com\",\r\n    databaseURL: \"https://projectsdashboard-7a76d.firebaseio.com\",\r\n    projectId: \"projectsdashboard-7a76d\",\r\n    storageBucket: \"projectsdashboard-7a76d.appspot.com\",\r\n    messagingSenderId: \"890418633069\",\r\n    appId: \"1:890418633069:web:16fae998f69332e9ba2264\",\r\n    measurementId: \"G-3HLRQNG50E\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  //firebase.analytics();\r\n\r\n\r\n\r\n  export default firebase","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authAction'\r\nimport firebase from '../../config/firebaseConfig'\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    confirmPassword: '',\r\n    errors: {},\r\n    input: {}\r\n  }\r\n  handleChange = (e) => {\r\n    let input = this.state.input;\r\n    input[e.target.id] = e.target.value;\r\n      this.setState({\r\n        [e.target.id]: e.target.value,\r\n        input\r\n      })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(this.validate()){\r\n      let input = {};\r\n      input[\"name\"] = \"\";\r\n      input[\"email\"] = \"\";\r\n      input[\"password\"] = \"\";\r\n      input[\"confirmPassword\"] = \"\";\r\n      this.props.signUp(this.state);\r\n    }\r\n  }\r\n  validate(){\r\n    let input = this.state.input;\r\n    let errors = {};\r\n    let isValid = true;\r\n\r\n    if (!input[\"email\"]) {\r\n      isValid = false;\r\n      errors[\"email\"] = \"Please enter your email Address.\";\r\n    }\r\n\r\n    if (typeof input[\"email\"] !== \"undefined\") {\r\n        \r\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n      if (!pattern.test(input[\"email\"])) {\r\n        isValid = false;\r\n        errors[\"email\"] = \"Please enter a valid email address.\";\r\n      }\r\n    }\r\n\r\n    if (!input[\"password\"]) {\r\n      isValid = false;\r\n      errors[\"password\"] = \"Please enter a password.\";\r\n    }\r\n\r\n    if (input[\"password\"].length < 6) {\r\n      isValid = false;\r\n      errors[\"password\"] = \"Your password must be at least 6 characters\";\r\n    }\r\n\r\n    if (!input[\"confirmPassword\"]) {\r\n      isValid = false;\r\n      errors[\"confirmPassword\"] = \"Please confirm your password.\";\r\n    }\r\n\r\n    if (typeof input[\"password\"] !== \"undefined\" && typeof input[\"confirmPassword\"] !== \"undefined\") {\r\n        \r\n      if (input[\"password\"] !== input[\"confirmPassword\"]) {\r\n        isValid = false;\r\n        errors[\"password\"] = \"Your passwords don't match.\";\r\n      }\r\n    } \r\n\r\n    this.setState({\r\n      errors: errors\r\n    });\r\n\r\n    return isValid;\r\n  }\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    //if (auth.uid) return <Redirect to='/' /> \r\n    var user = firebase.auth().currentUser;\r\n    if (user != null) {\r\n    if(user.emailVerified) return <Redirect to='/' />\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n      <br/>\r\n      <h3 className=\"center title\">Welcome! Register an account to get started..</h3>\r\n        <br/>\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h3 className=\"text-center\">Sign Up</h3>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\"><span className=\"auth-error\">*</span>Email</label>\r\n            <input className=\"form-control\" type=\"email\" id='email' onChange={this.handleChange} />\r\n            <div className=\"text-danger\">{this.state.errors.email}</div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\"><span className=\"auth-error\">*</span>Password</label>\r\n            <input className=\"form-control\" type=\"password\" id='password' onChange={this.handleChange} required=\"required\"/>\r\n            <div className=\"text-danger\">{this.state.errors.password}</div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\"><span className=\"auth-error\">*</span>Retype Password</label>\r\n            <input className=\"form-control\" type=\"password\" id='confirmPassword' onChange={this.handleChange} />\r\n            <div className=\"text-danger\">{this.state.errors.confirmPassword}</div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input className=\"form-control\" type=\"text\" id='firstName' onChange={this.handleChange} />\r\n            <div className=\"text-danger\">{this.state.errors.firstName}</div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input className=\"form-control\" type=\"text\" id='lastName' onChange={this.handleChange} />\r\n            <div className=\"text-danger\">{this.state.errors.lastName}</div>\r\n          </div>\r\n          <div className=\"form-group text-center\">\r\n            <button className=\"text-center btn register-btn z-depth-0\">Sign Up</button>\r\n            <div className=\"auth-error text-center\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=> {\r\n  return {\r\n    signUp: (creds) => dispatch(signUp(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\r\nimport { deleteProject } from '../../store/actions/projectActions'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {Link } from \"react-router-dom\";\r\nimport ProjectList from '../projects/ProjectList'\r\n\r\nclass Account extends Component {\r\n    render() {\r\n        const { auth, profile, projects } = this.props\r\n        //if user isnt loged in\r\n        if(!auth.emailVerified) return <Redirect to='/signIn' />\r\n        //console.log(projects)\r\n        return (\r\n            <div className=\"container\">\r\n            <br/>\r\n                <h5 className=\"title\">Hello {profile.firstName} {profile.lastName}</h5>  \r\n                <div className=\"\">\r\n                    <h5 className=\"title\">Current Collections</h5>\r\n                    <Link to=\"/create\"><button className=\"btn register-btn z-depth-0\">Register New Set</button></Link>\r\n                    <br/>\r\n                    <br/>\r\n                    { projects ?\r\n                    <div className=\"col s12 m12\">\r\n                        <ProjectList projects={ projects } area={ \"myAccount\" }/>\r\n                    </div>\r\n                    :\r\n                    <p className=\"title\">Looks like you havent registered any completed Hercules 2020 sets!<br/>If you have a set the please register it by clicking 'Register New Set'.</p>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile,\r\n        projects: state.firestore.ordered.projects\r\n        \r\n    }\r\n}\r\n\r\nconst mapDispatchtoProps = (dispatch) => {\r\n    return {\r\n        deleteProject: (project) => dispatch(deleteProject(project))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchtoProps), \r\n    firestoreConnect((props) => {\r\n        const id = props.auth.uid? props.auth.uid : null\r\n        return[\r\n        { \r\n            collection: 'projects',\r\n            where:[\r\n                ['authorId', '==', id]\r\n            ]\r\n        }\r\n        ]\r\n    })\r\n)(Account)\r\n","import React, { Component } from 'react'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        name: '',\r\n        city:'',\r\n        comments: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/account')\r\n    }\r\n    render() {\r\n        const { auth } = this.props\r\n        //if user isnt loged in\r\n        if(!auth.emailVerified) return <Redirect to='/signIn' />\r\n        return (\r\n            \r\n            <div className=\"container\">\r\n            <br/>\r\n            <h5 className=\"title\">Hi folks!<br/>Use this form to register your 2020 Hercules set!<br/> This is just for fun and to give us an idea of how many sets have been completed and where in the world they are!</h5>\r\n            <p className=\"title\">(Please only use this if you genuinly have a completed set. If you have multiple sets, please register them individually.)</p>    \r\n                <form onSubmit={ this.handleSubmit }>\r\n                    <h3 className=\"text-center\">Register New Set</h3>\r\n                    <p className=\"text-center\">Congratualtions on completing a set!</p>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Name your set</label>\r\n                        <input className=\"form-control\" type=\"text\" id=\"name\" onChange={ this.handleChange } />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"city\">City</label>\r\n                        <input className=\"form-control\" type=\"text\" id=\"city\" onChange={ this.handleChange } />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"comments\">Comments</label>\r\n                        <textarea className=\"form-control\" id=\"comments\" onChange={ this.handleChange }></textarea>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn register-btn z-depth-0\"><b>Register Set</b></button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchtoProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchtoProps)(CreateProject)\r\n","import React, { Component } from 'react'\r\nimport { editProject } from '../../store/actions/projectActions'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport firebase from '../../config/firebaseConfig'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\nclass EditProject extends Component {\r\n    state = {\r\n        name: '',\r\n        city: '',\r\n        comments: '',\r\n        id: ''\r\n    }\r\n    async componentDidMount(){\r\n        console.log(this.props.id)\r\n        firebase.firestore().collection('projects').where(\"id\", \"==\", this.props.id).get().then((snapshot) => {\r\n            snapshot.docs.forEach(doc => {\r\n                console.log(\"hello\" + doc.name)\r\n                this.setState({\r\n                    ...doc.data(),\r\n                    id: this.props.id\r\n                })\r\n            })\r\n        })\r\n     }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        })\r\n        console.log(this.state)\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(this.state)\r\n        this.props.editProject(this.state)\r\n        this.props.history.push('/account')\r\n    }\r\n    render(){\r\n        const { project, auth, id } = this.props\r\n        \r\n        if(!auth.emailVerified) return <Redirect to='/signIn' />\r\n        if(project){\r\n            if(auth.uid === project.authorId){\r\n            return (\r\n                <div className=\"container\">\r\n                    <form onSubmit={ this.handleSubmit }>\r\n                        <h5 className=\"grey-text text-darken-3\">Edit Collection</h5>\r\n                        <div className=\"form-group\">\r\n                            { !project.name ? <label htmlFor=\"city\">City</label> : null}\r\n                            <input className=\"form-control\" type=\"text\" id=\"name\" defaultValue= {project.name} onChange={ this.handleChange }/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            { !project.city ? <label htmlFor=\"city\">City</label> : null}\r\n                            <input className=\"form-control\" type=\"text\" id=\"city\" defaultValue= {project.city} onChange={ this.handleChange }/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            { !project.comments ? <label htmlFor=\"comments\">Comments</label> : null }\r\n                            <textarea className=\"form-control\" id=\"comments\"  className=\"materialize-textarea\" defaultValue={project.comments} onChange={ this.handleChange }></textarea>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button className=\"btn register-btn z-depth-0\"><b>Confirm Details</b></button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            )\r\n            } else{\r\n                return <Redirect to='/account' />\r\n            }\r\n        }else{\r\n            return(\r\n                <div>\r\n                    <h5>loading...</h5>\r\n                </div>\r\n            )\r\n        }\r\n    }   \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth,\r\n        id: id\r\n    }\r\n}\r\n\r\nconst mapDispatchtoProps = (dispatch) => {\r\n    return {\r\n        editProject: (project) => dispatch(editProject(project))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchtoProps),\r\n    firestoreConnect([\r\n        { collection: 'projects'}\r\n    ])\r\n)(EditProject)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { resetPassword } from '../../store/actions/authAction'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(this.state.emailVerified)\r\n        this.props.resetPassword(this.state.email);\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props\r\n        if(auth.emailVerified) return <Redirect to='/account' />\r\n        return (\r\n            <div className=\"container\">\r\n            <br/>\r\n            <br/>\r\n                <form onSubmit={ this.handleSubmit } className=\"white\">\r\n                    <h3 className=\"text-center\">Reset Password</h3>\r\n                    \r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input className=\"form-control\" type=\"email\" id=\"email\" onChange={ this.handleChange } />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn register-btn\">Reset Password</button>\r\n                        <div className=\"auth-error text-center\">\r\n                            { authError ? authError===\"Thank you for signing up! An email has be sent to your account, please follow the instructions there.\"? null: <p>{ authError }</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        resetPassword: (creds) => dispatch(resetPassword(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Footer from './components/layout/Footer.js'\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport Account from './components/layout/Account';\nimport CreateProject from './components/projects/CreateProject';\nimport EditProject from './components/projects/EditProject';\nimport ForgotPassword from './components/auth/ForgotPassword';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <header>\n      <Navbar />\n      </header>\n      <main className=\"App\">\n        <Switch>\n          <Route exact path='/' component={ Dashboard }></Route>\n          <Route path='/project/:id' component={ ProjectDetails }></Route>\n          <Route path='/editProject/:id' component={ EditProject }></Route>\n          <Route path='/signin' component={ SignIn }></Route>\n          <Route path='/signup' component={ SignUp }></Route>\n          <Route path='/create' component={ CreateProject }></Route>\n          <Route path='/account' component={ Account }></Route>\n          <Route path='/resetPassword' component={ ForgotPassword }></Route>\n        </Switch>\n      </main>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: \"If you arent redirected to your account - please refresh the page\"\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success')\r\n            return {\r\n                state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        case 'VALIDATE_EMAIL':\r\n            console.log(\"validate_email\")\r\n            return {\r\n                ...state,\r\n                authError: 'Thank you for signing up! An email has be sent to your account, please follow the instructions there.'\r\n            }\r\n        case 'VERIFY_EMAIL':\r\n            console.log(\"validate_email\")\r\n            return {\r\n                ...state,\r\n                authError: 'You have not yet verified your email address - a new verification email has been sent to you.'\r\n            }\r\n        case 'RESET_EMAIL_SUCCESS':\r\n            console.log(\"RESET_EMAIL_SUCCESS\")\r\n            return {\r\n                ...state,\r\n                authError: 'Thank you - A password reset email has been sent.'\r\n            }\r\n        case 'RESET_EMAIL_ERROR':\r\n            console.log(\"RESET_EMAIL_ERROR\")\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        case 'CREATE_EMAIL_ERROR':\r\n            console.log(\"CREATE_EMAIL_ERROR\")\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        case 'VALIDATE_EMAIL_ERROR':\r\n            console.log(\"VALIDATE_EMAIL_ERROR\")\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n        \r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'title 1', content: 'content 1'},\r\n        {id: '2', title: 'title 2', content: 'content 2'},\r\n        {id: '3', title: 'title 3', content: 'content 3'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log(\"created project\", action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log(\"created project error\", action.err);\r\n            return state;\r\n        case 'DELETE_PROJECT':\r\n            console.log(\"delete project\", action.id);\r\n            return state;\r\n        case 'DELETE_PROJECT_ERROR':\r\n            console.log(\"delete project error\", action.err);\r\n            return state;\r\n        case 'EDIT_PROJECT':\r\n            console.log(\"edit project\", action.project);\r\n            return state;\r\n        case 'EDIT_PROJECT_ERROR':\r\n            console.log(\"edit project error\", action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider, useSelector } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from 'react-redux-firebase'\nimport firebaseConfig from './config/firebaseConfig'\nimport firebase from 'firebase/app'\n\nconst store = createStore(\n  rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(firebase, firebaseConfig)\n  )\n  );\n\n  //access firebase user in profile\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n}\n\nconst reactReduxFirebaseProps = {\n  firebase ,\n  config: firebaseConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n  userProfile: 'users', // where profiles are stored in database\n  presence: 'presence', // where list of online users is stored in database\n  sessions: 'sessions'\n}\n\n//prevent rendering of page until authentication has been calculated\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div>Loading...</div>;\n      return children\n}\n\nReactDOM.render(\n    <Provider store={ store }>\n      <ReactReduxFirebaseProvider {...reactReduxFirebaseProps}>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>  \n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}